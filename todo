TODO:

  - AOP: Hooks ?


  - bloky pro akce
    - pár šablon pro typické operace a nakonfigurovat si to u každé akce v popisu automatu
  - reálný backend pro ukládání dat
    - mysql backend
    - json file backend

  - tabulka s properties automatu
  - blok pro celkovou dokumentaci entity
  - prehled typu v administraci (podle globalni konfigurace entit)

  - pridat pluginy pro view a formulare z konfigurace entity
    - simplecrud to ma uz celkem implementovane, staci oddelit a upravit nacitani konfigurace



  - websockets:
    - restart kaskady
      - odstranit vsecky bloky, vyrobit znovu startovaci sadu bloku
      - mozna bude vyodnejsi udelat snapshot a vratit se k nemu
      - mozna bude lepsi moznost vymazat namespace -- zustavsi bloky by pak mohly neco zajimaveho udrzovat
  - websocket.php
    - specialni server misto index.php
    - app global state sync pres sdilenou pamet
      - http://www.php.net/manual/en/cond.broadcast.php
    - prichozi zprava je predana restartovane kaskade
      - posila zpravy misto predani dat sablonovacimu systemu (pouziva se api pro sablonovaci system)

  - Konfigurace
    - umožnit verzování, ukládat změny v session a commit až později


DONE:

  - kesovani konfigurace (+10% vykonu)

  - blok pro nakresleni stavoveho automatu

  - ref() má dostat pouze ID, nikoliv typ -- ten musí být získán z databáze
  - ID bude globální v rámci backendu (celé databáze), typicky dvojice (typ, id), ale někdy ne
    - například (položka, id) -> (položka, id, typ položky)

  - přidat nullRef($typ) -- protože ref(null) nepozná typ

  - block storage -- pridani block storage staci, neni potreba blok reprezentujici backend
    - backend bude vyroben v block storage
  - generovat blok pro kazdou akci
  - globalni konfigurace entit


